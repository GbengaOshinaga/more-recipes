{"version":3,"sources":["../../../dist/models/recipes.js"],"names":["module","exports","sequelize","DataTypes","Recipes","define","name","type","STRING","allowNull","description","TEXT","ingredients","ARRAY","image","views","INTEGER","defaultValue","upvotes","downvotes","associate","models","hasMany","Reviews","Votes","onDelete","belongsTo","User","belongsToMany","as","through"],"mappings":"AAAA;;AAEAA,OAAOC,OAAP,GAAiB,UAAUC,SAAV,EAAqBC,SAArB,EAAgC;AAC/C,MAAIC,UAAUF,UAAUG,MAAV,CAAiB,SAAjB,EAA4B;AACxCC,UAAM;AACJC,YAAMJ,UAAUK,MADZ;AAEJC,iBAAW;AAFP,KADkC;AAKxCC,iBAAa;AACXH,YAAMJ,UAAUQ,IADL;AAEXF,iBAAW;AAFA,KAL2B;AASxCG,iBAAa;AACXL,YAAMJ,UAAUU,KAAV,CAAgBV,UAAUK,MAA1B,CADK;AAEXC,iBAAW;AAFA,KAT2B;AAaxCK,WAAO;AACLP,YAAMJ,UAAUK,MADX;AAELC,iBAAW;AAFN,KAbiC;AAiBxCM,WAAO;AACLR,YAAMJ,UAAUa,OADX;AAELC,oBAAc;AAFT,KAjBiC;AAqBxCC,aAAS;AACPX,YAAMJ,UAAUU,KAAV,CAAgBV,UAAUa,OAA1B,CADC;AAEPC,oBAAc;AAFP,KArB+B;AAyBxCE,eAAW;AACTZ,YAAMJ,UAAUU,KAAV,CAAgBV,UAAUa,OAA1B,CADG;AAETC,oBAAc;AAFL;AAzB6B,GAA5B,CAAd;;AA+BAb,UAAQgB,SAAR,GAAoB,UAAUC,MAAV,EAAkB;AACpCjB,YAAQkB,OAAR,CAAgBD,OAAOE,OAAvB;AACAnB,YAAQkB,OAAR,CAAgBD,OAAOG,KAAvB,EAA8B,EAAEC,UAAU,SAAZ,EAA9B;AACArB,YAAQsB,SAAR,CAAkBL,OAAOM,IAAzB;AACAvB,YAAQwB,aAAR,CAAsBP,OAAOM,IAA7B,EAAmC,EAAEE,IAAI,gBAAN,EAAwBC,SAAS,YAAjC,EAAnC;AACD,GALD;AAMA,SAAO1B,OAAP;AACD,CAvCD","file":"recipes.js","sourcesContent":["'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var Recipes = sequelize.define('Recipes', {\n    name: {\n      type: DataTypes.STRING,\n      allowNull: false\n    },\n    description: {\n      type: DataTypes.TEXT,\n      allowNull: false\n    },\n    ingredients: {\n      type: DataTypes.ARRAY(DataTypes.STRING),\n      allowNull: false\n    },\n    image: {\n      type: DataTypes.STRING,\n      allowNull: true\n    },\n    views: {\n      type: DataTypes.INTEGER,\n      defaultValue: 0\n    },\n    upvotes: {\n      type: DataTypes.ARRAY(DataTypes.INTEGER),\n      defaultValue: []\n    },\n    downvotes: {\n      type: DataTypes.ARRAY(DataTypes.INTEGER),\n      defaultValue: []\n    }\n  });\n\n  Recipes.associate = function (models) {\n    Recipes.hasMany(models.Reviews);\n    Recipes.hasMany(models.Votes, { onDelete: 'CASCADE' });\n    Recipes.belongsTo(models.User);\n    Recipes.belongsToMany(models.User, { as: 'favouriteUsers', through: 'Favourites' });\n  };\n  return Recipes;\n};"]}