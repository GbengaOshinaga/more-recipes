{"version":3,"sources":["RecipesController.js"],"names":["RecipesController","route","recipes","get","req","res","getRecipes","post","addRecipe","put","modifyRecipe","delete","deleteRecipe","addReview","errors","isRecipeValid","body","length","status","json","recipe","name","recipeName","details","recipeDetail","ingredients","query","sort","order","areParamsValid","getSortedRecipes","params","id","isIDValid","review"],"mappings":"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","file":"RecipesController.js","sourceRoot":"C:/Users/gbenga.oshinaga/Documents/Andela/more-recipes/more-recipes/server/controllers","sourcesContent":["import { Router } from 'express';\r\nimport Recipes from '../models/Recipes';\r\nimport RecipesValidator from '../validator/RecipeValidator';\r\n\r\n/**\r\n * RecipesController\r\n */\r\nexport default class RecipesController {\r\n  /**\r\n     * Constructor\r\n     */\r\n  constructor() {\r\n    this.route = Router();\r\n    this.recipes = new Recipes();\r\n\r\n    this.route.get('/', (req, res) => {this.getRecipes(req, res)});\r\n    this.route.post('/', (req, res) => {this.addRecipe(req, res)});\r\n    this.route.put('/:id', (req, res) => {this.modifyRecipe(req, res)});\r\n    this.route.delete('/:id', (req, res) => {this.deleteRecipe(req, res)});\r\n    this.route.post('/:id/reviews', (req, res) => {this.addReview(req, res)});\r\n  }\r\n\r\n  /**\r\n   * Adds a recipe\r\n   * @param {*} req \r\n   * @param {*} res \r\n   */\r\n  addRecipe(req, res) {\r\n    const errors = RecipesValidator.isRecipeValid(req.body);\r\n    if(errors.length >= 1){\r\n      return res.status(400).json(errors);\r\n    }\r\n    const recipe = {\r\n      name: req.body.recipeName,\r\n      details: req.body.recipeDetail,\r\n      ingredients: req.body.ingredients\r\n    };  \r\n    return res.status(201).json(this.recipes.addRecipe(recipe));\r\n  }\r\n\r\n  /**\r\n   * Gets Recipes\r\n   * @param {*} req \r\n   * @param {*} res \r\n   */\r\n  getRecipes(req, res) {\r\n    if(req.query.sort && req.query.order){\r\n      const errors = RecipesValidator.areParamsValid(req.query.sort, req.query.order);\r\n      if(errors.length >= 1){\r\n        return res.status(400).json(errors);\r\n      }\r\n      return res.status(200).json(this.recipes.getSortedRecipes(req.query.order));\r\n    }\r\n    return res.status(200).json(this.recipes.recipes);\r\n  }\r\n\r\n  /**\r\n   * Modifies a recipe\r\n   * @param {*} req \r\n   * @param {*} res \r\n   */\r\n  modifyRecipe(req, res) {\r\n    const errors = RecipesValidator.isRecipeValid(req.body);\r\n    if(errors.length >= 1){\r\n      return res.status(400).json(errors);\r\n    }\r\n    const recipe = {\r\n      name: req.body.recipeName,\r\n      details: req.body.recipeDetail,\r\n      ingredients: req.body.ingredients\r\n    };\r\n    return res.status(200).json(this.recipes.modifyRecipe(req.params.id, recipe));\r\n  }\r\n\r\n  /**\r\n   * Deletes specified recipe\r\n   * @param {*} req \r\n   * @param {*} res \r\n   */\r\n  deleteRecipe(req, res){\r\n    const errors = RecipesValidator.isIDValid(req.params.id);\r\n    if(errors.length >= 1){\r\n      return res.status(404).json(errors);\r\n    }\r\n    return res.status(200).json(this.recipes.deleteRecipe(req.params.id));\r\n  }\r\n\r\n  /**\r\n   * Add review to recipe\r\n   * @param {*} req \r\n   * @param {*} res \r\n   */\r\n  addReview(req, res){\r\n    const errors = RecipesValidator.isIDValid(req.params.id);\r\n    if(errors.length >= 1){\r\n      return res.status(400).json(errors);\r\n    }\r\n    return res.status(201).json(this.recipes.addReview(req.params.id, req.body.review));\r\n  }\r\n}\r\n"]}